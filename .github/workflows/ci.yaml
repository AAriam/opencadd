#!/bin/bash
name: CI

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"
  schedule:
    # Nightly Tests
    - cron: "0 0 * * *"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, ubuntu-latest]
        python-version: [3.7, 3.8]
    env:
      CI_OS: ${{ matrix.os }}
      PYVER: ${{ matrix.python-version }}
      PACKAGE: "superposer"

    steps:
      - uses: actions/checkout@v2
      - name: Additional info about the build
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a
      - name: Fix conda in MacOS
        shell: bash
        if: startsWith(matrix.os, 'macOS')
        run: |
          sudo chown -R $(id -u):$(id -g) ${CONDA}

      # TODO: Remove this step when theseus and mmligner are in conda-forge already
      - name: Build recipes for theseus and mmligner
        shell: bash
        run: |
          . devtools/scripts/initialize_conda.sh
          conda activate
          conda install --yes conda-build
          conda build --python=$PYVER -c conda-forge -c bioconda devtools/conda-recipes/mmligner/
          conda build --python=$PYVER -c conda-forge -c bioconda devtools/conda-recipes/theseus/

      - name: Create environment for package
        shell: bash
        run: |
          . devtools/scripts/initialize_conda.sh
          conda activate
          conda info --all
          python devtools/scripts/create_conda_env.py -n=test -p=$PYVER devtools/conda-envs/test_env.yaml
      - name: Install package
        shell: bash
        run: |
          . devtools/scripts/initialize_conda.sh
          conda activate test
          python -m pip install . --no-deps
          conda list
      - name: Run tests
        shell: bash
        run: |
          . devtools/scripts/initialize_conda.sh
          conda activate test
          pytest -v --cov=${PACKAGE} --cov-report=xml --color=yes ${PACKAGE}/tests/
      - name: CodeCov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          yml: ./.codecov.yml
  #############
  lint-format:
    runs-on: ubuntu-latest
    env:
      CI_OS: ubuntu-latest
      PACKAGE: "superposer"
      PYVER: "3.7"

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      # TODO: Remove this step when theseus and mmligner are in conda-forge already
      - name: Build recipes for theseus and mmligner
        shell: bash
        run: |
          . devtools/scripts/initialize_conda.sh
          conda activate
          conda install --yes conda-build
          conda build --python=$PYVER -c conda-forge -c bioconda devtools/conda-recipes/mmligner/
          conda build --python=$PYVER -c conda-forge -c bioconda devtools/conda-recipes/theseus/

      - name: Install linter and formatter
        shell: bash
        run: |
          . devtools/scripts/initialize_conda.sh
          conda activate
          python devtools/scripts/create_conda_env.py -n=test -p=$PYVER devtools/conda-envs/test_env.yaml
          conda activate test
          conda install -y pylint black
      - name: Run pylint
        shell: bash
        run: |
          . devtools/scripts/initialize_conda.sh
          conda activate test
          pylint $PACKAGE/
      - name: Run black check
        shell: bash
        if: always()
        run: |
          . devtools/scripts/initialize_conda.sh
          conda activate test
          black --check -l 99 $PACKAGE/
  #############
  docs:
    runs-on: ubuntu-latest
    env:
      CI_OS: ubuntu-latest
      PACKAGE: "superposer"
      PYVER: "3.7"

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      # TODO: Remove this step when theseus and mmligner are in conda-forge already
      - name: Build recipes for theseus and mmligner
        shell: bash
        run: |
          . devtools/scripts/initialize_conda.sh
          conda activate
          conda install --yes conda-build
          conda build --python=$PYVER -c conda-forge -c bioconda devtools/conda-recipes/mmligner/

      - name: Create environment
        shell: bash
        run: |
          . devtools/scripts/initialize_conda.sh
          conda activate
          python devtools/scripts/create_conda_env.py -n=test -p=$PYVER devtools/conda-envs/test_env.yaml
      - name: Run sphinx
        shell: bash
        run: |
          . devtools/scripts/initialize_conda.sh
          conda activate test
          cd docs
          make clean
          SPHINXOPTS="-W -T --keep-going" make html
