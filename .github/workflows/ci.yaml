
name: CI

on:

  push:
    branches:
      - "master"
      - "dev"

  pull_request:
    branches:
      - "master"
      - "dev"

  schedule:
    # Run a cron job once weekly on Monday
    - cron: "0 3 * * 1"

jobs:

  test:

    name: Test (OS ${{ matrix.os }}, Python ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11"]
    env:
      PACKAGE: "opencadd"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Additional build info
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a

      - name: Install dependencies
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: devtools/conda-envs/test_env.yaml
          cache-env: true
          extra-specs: |
            python=${{ matrix.python-version }}

      # TODO: Remove this step when patched theseus makes it to CF
      - name: Build patched mmligner
        shell: bash -l {0}
        run: |
          micromamba install conda-build
          conda build devtools/conda-recipes/mmligner/

      - name: Install OpenCADD
        shell: bash -l {0}
        run: |
          micromamba install -c local mmligner pip
          python -m pip install . --no-deps
          micromamba list

      - name: Run unit tests
        shell: bash -l {0}
        run: pytest -v --cov=${PACKAGE} --cov-report=xml --color=yes tests/

      - name: CodeCov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          yml: ./.codecov.yml

  lint:
    name: Static code analysis
    runs-on: ubuntu-latest
    env:
      PACKAGE: "opencadd"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # More info on options: https://github.com/marketplace/actions/provision-with-micromamba
      - name: Install dependencies
        uses: mamba-org/provision-with-micromamba@v15
        with:
          environment-file: devtools/conda-envs/test_env.yaml
          cache-env: true

      - name: Lint (pylint)
        shell: bash -l {0}
        run: pylint $PACKAGE/

      - name: Code-style (black -l 99)
        shell: bash -l {0}
        if: always()
        run: black --check -l 99 $PACKAGE/

  docs:
    name: Sphinx docs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # More info on options: https://github.com/marketplace/actions/provision-with-micromamba
      - name: Install dependencies
        uses: mamba-org/provision-with-micromamba@v15
        with:
          environment-file: devtools/conda-envs/test_env.yaml
          cache-env: true

      - name: Install OpenCADD
        shell: bash -l {0}
        run: |
          python -m pip install . --no-deps
          micromamba list

      - name: Build Sphinx docs
        shell: bash -l {0}
        run: |
          cd docs
          make clean
          SPHINXOPTS="-W -T --keep-going" make html
